{"version":3,"sources":["firebase.js","component/Modal.js","component/VenueCard.js","component/RestaurantCard.js","component/Carousel.js","component/ProgressBar.js","component/DynamicMainDisplay.js","component/SavedCombos.js","component/Header.js","App.js","serviceWorker.js","index.js","assets/plateSetting.jpg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","venuePageCSS","background","position","top","left","height","width","padding","color","restaurantPageCSS","confirmationPageCSS","minHeight","h2CSS","Modal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","e","setState","userName","target","value","submitToFirebase","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","name","combo","dbRef","wrap","_context","prev","next","database","ref","state","push","alert","window","location","href","stop","_x","_x2","apply","arguments","resetApp","_this2","_this$props$location$","props","displayModal","venuePage","restaurantPage","ticketMasterData","restaurantData","specificId","restaurantSpecificId","userInputCombination","react_default","createElement","Fragment","style","className","_embedded","venues","address","line1","postalCode","url","aria-label","react_router_dom","to","react_router","exact","path","component","App","key","restaurant","id","price_range","react","src","images","alt","dates","start","localDate","localTime","plateSetting","cuisines","htmlFor","type","placeholder","onChange","onClick","Component","VenueCard","handleInfoClick","clickedVenueId","parentElement","getVenueCard","children","activeItemIndex","selectedCard","selectedCardId","isVenueCardClicked","_this$props","react_items_carousel_default","numberOfCards","screenWidth","gutter","slidesToScroll","activePosition","outsideChevron","showSlither","firstAndLastGutter","chevronWidth","rightChevron","leftChevron","requestToChangeActive","map","event","i","concat","changeSelectedCard","role","tabIndex","pathname","undefined","RestaurantCard","clickedRestaurantId","getRestaurantCard","dataFunction","venue","lat1","latitude","lon1","longitude","lat2","lon2","distanceBetweenLocations","pi","equation","Math","cos","distanceInMetres","asin","sqrt","distanceRounded","round","distanceArray","checkForWithin1km","distanceOver1000m","venueUserInput","selectedRestoCardId","changeSelectedRestoCard","user_rating","aggregate_rating","rating_text","handleRestaurantClick","Carousel","component_VenueCard","component_RestaurantCard","Tracker","styled","div","_templateObject","ProgressInTracker","_templateObject2","percentage","ProgressBar","percentageLimits","min","max","DynamicMainDisplay","venueId","displayRestaurantCards","getRestaurantData","restaurantId","restaurantUserInput","handleClick","restaurantNames","restaurantCuisine","restaurantPriceRange","restaurantRating","restaurantAddress","restaurantUrl","confirmationPage","savedCombosPage","modalPage","prevProps","resetVenueResto","axios","method","dataResponse","params","apikey","count","lat","lon","radius","sort","then","results","data","restaurants","intViewportWidth","innerWidth","component_ProgressBar","component_Carousel","SavedCombos","createNewCombo","removeCombo","comboId","remove","savedCombos","eventDate","eventVenue","resto","aggregaterating","Header","handleOnChange","userCountry","userCity","handleOnSubmit","preventDefault","dynamicMainDisplayPage","getTicketMasterData","displaySavedCombos","length","setTimeout","document","getElementById","scrollIntoView","venueNames","eventNames","venueAddresses","cityNames","longitudes","latitudes","dateString","newDate","Date","year","getFullYear","newMonth","getMonth","newDay","getDate","month","day","country","city","startDateTime","page","totalPages","events","on","response","valueArray","val","newSaved","item","onSubmit","label","component_DynamicMainDisplay","component_SavedCombos","component_Header","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.76e6f83e.chunk.js","sourcesContent":["import firebase from 'firebase';\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAvCHi6dGHEBYlxENNHNUVrBNAfxrD2OdU\",\n    authDomain: \"dinneraftershow.firebaseapp.com\",\n    databaseURL: \"https://dinneraftershow.firebaseio.com\",\n    projectId: \"dinneraftershow\",\n    storageBucket: \"\",\n    messagingSenderId: \"641119653852\",\n    appId: \"1:641119653852:web:db89e0e85fd3dd34\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, {Component, Fragment} from 'react';\nimport firebase from '../firebase.js';\nimport App from '../App';\nimport {\n    Route,\n    Link\n} from 'react-router-dom';\nimport plateSetting from '../assets/plateSetting.jpg';\n\nconst venuePageCSS = {\n    background: \"rgba(0, 0, 0, 0.7)\",\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    height: \"100vh\",\n    width: \"100%\",\n    padding: \"100px 0\",\n    color: \"white\"\n}\n\nconst restaurantPageCSS = {\n    background: \"rgba(0, 0, 0, 0.7)\",\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    height: \"100vh\",\n    width: \"100%\",\n    padding: \"100px 0\",\n    color: \"white\"\n}\n\nconst confirmationPageCSS = {\n    background: \"rgba(0, 0, 0, 0.7)\",\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    minHeight : \"100vh\",\n    width: \"100%\",\n    padding: \"20px 0\",\n    color: \"#4c003e\"\n}\n\nconst h2CSS = {\n    color: \"#4c003e\"\n}\n\nclass Modal extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            userName: ''\n        }\n    }\n\n    handleNameChange = (e) => {\n        this.setState({\n            userName: e.target.value\n        })\n    }\n\n    submitToFirebase = async (name, combo) => {\n        // storing user's name, user's choosen event/restaurant combo to firebase\n        const dbRef = firebase.database().ref();\n\n        if (this.state.userName) {\n            //loader\n            await dbRef.push({\n                name: name,\n                combo: combo\n            });\n            //loader off\n\t\t\talert('Thank you for sharing your combination.');\n\t\t\twindow.location.href = \"/\"\n        } \n        else {\n            alert('Please enter your name before saving the data.')\n        } \n    }\n\n\tresetApp = () => {\n\t\twindow.location.href = \"/\"\n\t}\n\n    render(){\n        const  {state ={}} = this.props.location;\n        const { displayModal, venuePage, restaurantPage, ticketMasterData, restaurantData, specificId, restaurantSpecificId, userInputCombination} = state;\n\n        if (displayModal && venuePage) {\n            return(\n                <> \n                    <div style={venuePageCSS}>\n                        <div className=\"venueModal wrapper\">\n                            <h2 style={h2CSS}>{ticketMasterData[specificId].name}</h2>\n                            <h3>Venue & Address</h3>\n                            <p>{ticketMasterData[specificId]._embedded.venues[0].name}</p>\n                            <p>{ticketMasterData[specificId]._embedded.venues[0].address.line1} {ticketMasterData[specificId]._embedded.venues[0].postalCode}</p>\n                            <a href={ticketMasterData[specificId].url} className=\"venueLink\" aria-label=\"go to ticketmaster page for the current event\">buy your ticket here</a>\n                        </div>\n                        <Link to=\"/\"><button className=\"exitModal\"><i className=\"fas fa-window-close\"></i></button></Link>\n                    </div> \n                    <Route exact path=\"/\" component={App}></Route>\n                </>\n            )\n        }\n\n        else if (displayModal && restaurantPage) {\n            return(\n                <>\n                    <div style={restaurantPageCSS} key={restaurantData[restaurantSpecificId].restaurant.id}>\n                        <div className=\"restaurantModal wrapper\">\n                            <h2 style={h2CSS}>{restaurantData[restaurantSpecificId].restaurant.name}</h2>\n                            <p>{restaurantData[restaurantSpecificId].restaurant.location.address}</p>\n                            <p>Price Range: {restaurantData[restaurantSpecificId].restaurant.price_range}/5</p>\n                            <a href={restaurantData[restaurantSpecificId].restaurant.url} className=\"restaurantLink\">Link to Zomato Profile</a>\n                        </div>\n                        <Link to=\"/\"><button className=\"exitModal\"><i className=\"fas fa-window-close\"></i></button></Link>\n                    </div>\n                    <Route exact path=\"/\" component={App}></Route>\n                </>\n            )\n        } \n\n        else if (displayModal &&  !restaurantPage && !venuePage) {\n            return(\n                <Fragment>\n                    <div style={confirmationPageCSS} className=\"comboModal\">\n                        <div className=\"comboCards\">\n                            <div className=\"venueResult\">\n                                <img src={userInputCombination[0].images[0].url} alt={userInputCombination[0].name} />\n                                <h3>{userInputCombination[0].name}</h3>\n                                <p>{userInputCombination[0]._embedded.venues[0].name}</p>\n                                <p>{userInputCombination[0].dates.start.localDate} at {userInputCombination[0].dates.start.localTime}</p>\n                            </div>\n\n                            <div className=\"restaurantResult\">\n                                <img src={plateSetting} alt=\"A dinner plate setting.\"/>\n                                <h3>{userInputCombination[1].restaurant.name}</h3>\n                                <p>{userInputCombination[1].restaurant.cuisines}</p>\n                                <p>{userInputCombination[1].restaurant.location.address}</p>\n                            </div>\n                        \n                            <div className=\"optionToSaveCombo\">\n                                <div className=\"userName\">\n                                    <label htmlFor=\"userName\">Please enter your name to save the data:</label>\n                                    <input id=\"userName\" type=\"text\" placeholder=\"enter your name\" onChange={this.handleNameChange}/>\n                                </div>\n                                <div className=\"optionToSaveComboButtons\">\n                                    <div className=\"saveComboButton\">\n                                        <button onClick={() => { this.submitToFirebase(this.state.userName, userInputCombination)}}>save</button>\n                                    </div>\n                                    <div className=\"resetButton\">\n                                        <button onClick={this.resetApp}>try again</button>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n                    <Route exact path=\"/\" component={App}></Route>\n                </Fragment>\n            )\n        } \n        else { return (null)}\n    }\n}\n\nexport default Modal;","import React, {Component, Fragment} from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport Modal from './Modal.js';\nimport {\n\tRoute,\n\tLink\n} from 'react-router-dom'\n\nclass VenueCard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tchildren: [],\n\t\t\tactiveItemIndex: 0,\n\t\t\tselectedCard: true,\n\t\t\tselectedCardId: null,\n\t\t\tisVenueCardClicked: false\n\t\t}\n\t}\n\n\thandleInfoClick = (e) => {\n\t\tconst clickedVenueId = e.target.parentElement.id\n\t\tthis.props.getVenueCard(clickedVenueId);\n\t}\n\n\trender() {\n\t\tconst {venuePage, ticketMasterData} = this.props\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<ItemsCarousel\n\t\t\t\t\t// Carousel configurations\n\t\t\t\t\tnumberOfCards={ this.props.screenWidth > 980 ? 3 : this.props.screenWidth > 710 ? 2 : 1 }\n\t\t\t\t\tgutter={10}\n\t\t\t\t\tslidesToScroll={1}\n\t\t\t\t\tactivePosition={'center'}\n\t\t\t\t\toutsideChevron={true}\n\t\t\t\t\tshowSlither={false}\n\t\t\t\t\tfirstAndLastGutter={true}\n\t\t\t\t\tchevronWidth={30}\n\t\t\t\t\trightChevron={'>'}\n\t\t\t\t\tleftChevron={'<'}\n\t\t\t\t\t// Active item configurations\n\t\t\t\t\tactiveItemIndex={this.state.activeItemIndex}\n\t\t\t\t\trequestToChangeActive={value => this.setState({ activeItemIndex: value })}\n\t\t\t\t>\n\t\t\t\t\t{this.props.ticketMasterData.map((event, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t{/* THIS IS MODAL*/}\n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tclassName={`venueCard ${this.props.selectedCardId === i ? `show` : `hide`}`}\n\t\t\t\t\t\t\t\t\tkey={event.id}\n\t\t\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\t\t\tonClick={() => {this.props.changeSelectedCard(i)}} role=\"button\"\n\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Link id={i} to={{\n\t\t\t\t\t\t\t\t\t\tpathname: venuePage ? '/modal' : undefined,\n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\tspecificId: i,\n\t\t\t\t\t\t\t\t\t\t\tdisplayModal: true,\n\t\t\t\t\t\t\t\t\t\t\tvenuePage: venuePage,\n\t\t\t\t\t\t\t\t\t\t\tticketMasterData: ticketMasterData\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}} tabIndex=\"-1\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"moreInfo\"><i className=\"fas fa-info-circle\"></i></button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t\t\t\t\t<img className=\"cardImage\" src={event.images[0].url} alt={event.name} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p>{event.dates.start.localDate}</p>\n\t\t\t\t\t\t\t\t\t{/* Event name */}\n\t\t\t\t\t\t\t\t\t<h3>{event.name}</h3>\n\t\t\t\t\t\t\t\t\t{/* Venue name */}\n\t\t\t\t\t\t\t\t\t<p>{event._embedded.venues[0].name}</p>\n\t\t\t\t\t\t\t\t\t<div className=\"overlay\" onClick={this.handleInfoClick}></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ItemsCarousel>\n\t\t\t\t<Route path=\"/modal\" component={Modal}></Route>\n\t\t\t</Fragment>\n\t\t)\t\n\t};\n};\n\nexport default VenueCard","import React, { Component, Fragment } from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport Modal from './Modal.js';\nimport {\n\tRoute,\n\tLink\n} from 'react-router-dom'\nimport plateSetting from '../assets/plateSetting.jpg'\n\n\nclass RestaurantCard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tchildren: [],\n\t\t\tactiveItemIndex: 0,\n\t\t\tdistanceArray: [],\n\t\t\tdistanceRounded: 0,\n\t\t\tdistanceOver1000m: false,\n\t\t}\n\t}\n\n\thandleInfoClick = (e) => {\n\t\tconst clickedRestaurantId = e.target.parentElement.id\n\t\tthis.props.getRestaurantCard(clickedRestaurantId);\n\t}\n\n\n\tdataFunction = (venue, restaurant, i) => {\n\t\tconst lat1 = venue._embedded.venues[0].location.latitude\n\t\tconst lon1 = venue._embedded.venues[0].location.longitude\n\t\tconst lat2 = restaurant[i].restaurant.location.latitude\n\t\tconst lon2 = restaurant[i].restaurant.location.longitude\n\t\tthis.distanceBetweenLocations(lat1, lon1, lat2, lon2)\n\t}\n\n\tdistanceBetweenLocations = (lat1, lon1, lat2, lon2) => {\n\t\tconst pi = 0.017453292519943295;    //This is  Math.PI / 180\n\t\tconst equation = 0.5 - Math.cos((lat2 - lat1) * pi) / 2 + Math.cos(lat1 * pi) * Math.cos(lat2 * pi) * (1 - Math.cos((lon2 - lon1) * pi)) / 2;\n\t\tconst earth = 6371; //  Earth distance in km so it will return the distance in km\n\t\tconst distanceBetweenLocations = 2 * earth * Math.asin(Math.sqrt(equation));\n\t\tconst distanceInMetres = distanceBetweenLocations * 1000\n\t\tconst distanceRounded = Math.round(distanceInMetres)\n\t\tthis.state.distanceArray.push(distanceRounded)\n\t}\n\n\tcheckForWithin1km = () => {\n\t\tif (!this.state.distanceOver1000m){\n\t\t\tthis.setState({\n\t\t\tdistanceOver1000m: true\n\t\t})\n\t\t}\n\t} \n\n\trender() {\n\t\tconst { restaurantData, restaurantPage, venuePage } = this.props\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{this.state.distanceOver1000m ? <h2>WARNING it's gonna be a lot of walking!</h2> : null}\n\n\t\t\t\t<ItemsCarousel\n\t\t\t\t\t// Carousel configurations\n\t\t\t\t\tnumberOfCards={this.props.screenWidth > 980 ? 3 : this.props.screenWidth > 710 ? 2 : 1}\n\t\t\t\t\tgutter={10}\n\t\t\t\t\tslidesToScroll={1}\n\t\t\t\t\tactivePosition={'center'}\n\t\t\t\t\toutsideChevron={true}\n\t\t\t\t\tshowSlither={false}\n\t\t\t\t\tfirstAndLastGutter={true}\n\t\t\t\t\tchevronWidth={30}\n\t\t\t\t\trightChevron={'>'}\n\t\t\t\t\tleftChevron={'<'}\n\t\t\t\t\t// Active item configurations\n\t\t\t\t\tactiveItemIndex={this.state.activeItemIndex}\n\t\t\t\t\trequestToChangeActive={value => this.setState({ activeItemIndex: value })}\n\t\t\t\t>\n\t\t\t\t{this.props.restaurantData.map((restaurant, i) => {\n\t\t\t\t\t{ this.dataFunction(this.props.venueUserInput, this.props.restaurantData, i) }\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tclassName={`restaurantCard ${this.props.selectedRestoCardId === i ? `show` : `hide`}`} \n\t\t\t\t\t\t\t\tkey={restaurant.id} \n\t\t\t\t\t\t\t\tid={i} \n\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => { this.props.changeSelectedRestoCard(i)}}\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Link to={{\n\t\t\t\t\t\t\t\t\t\tpathname: restaurantPage ? '/modal' : undefined, \n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\trestaurantSpecificId: i,\n\t\t\t\t\t\t\t\t\t\t\trestaurantPage: restaurantPage,\n\t\t\t\t\t\t\t\t\t\t\tvenuePage: venuePage,\n\t\t\t\t\t\t\t\t\t\t\trestaurantData: restaurantData,\n\t\t\t\t\t\t\t\t\t\t\tdisplayModal: true, \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}} tabIndex=\"-1\">\t\n\t\t\t\t\t\t\t\t\t\t<button onClick={this.handleInfoClick} className=\"moreInfo\"><i className=\"fas fa-info-circle\"></i></button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t\t\t\t<img className=\"imageContainer\" src={plateSetting} alt=\"A dinner place setting.\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<h3>{restaurant.restaurant.name}</h3>\n\t\t\t\t\t\t\t\t<p>{restaurant.restaurant.cuisines}</p>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{restaurant.restaurant.user_rating.aggregate_rating > 0 \n\t\t\t\t\t\t\t\t? <h4>{restaurant.restaurant.user_rating.aggregate_rating}</h4>\n\t\t\t\t\t\t\t\t: <h4 className=\"notRated\">{restaurant.restaurant.user_rating.rating_text}</h4>}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<p>{restaurant.restaurant.location.address}</p>\n\n\t\t\t\t\t\t\t\t<p>Distance from Venue: <span>{this.state.distanceArray[i]}m</span></p>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"overlay\" onClick={this.handleRestaurantClick}></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t</ItemsCarousel>\n\t\t\t\t{this.state.distanceArray[0] > 1000 ? this.checkForWithin1km() : null}\n\t\t\t\t<Route path=\"/modal\" component={Modal}></Route>\n\t\t\t</Fragment>\n\t\t)\n\t};\n}\t\t\n\nexport default RestaurantCard;","import React, {Component} from 'react';\nimport VenueCard from './VenueCard.js';\nimport RestaurantCard from './RestaurantCard.js';\n\nclass Carousel extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state ={\n\t\t\tselectedCardId:null,\n\t\t\tselectedRestoCardId:null\n\t\t}\n\t}\n\t\n\tchangeSelectedCard =(i)=>{\n\t\tthis.props.getVenueCard(i);\n\t\tthis.setState({\n\t\t\tselectedCardId:i\n\t\t})\n\t}\n\n\tchangeSelectedRestoCard = (i) => {\n\t\tthis.props.getRestaurantCard(i);\n\t\tthis.setState({\n\t\t\tselectedRestoCardId: i\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"carouselContainer\" className=\"carouselContainer wrapper\">\n\t\t\t{this.props.venuePage \n\t\t\t\t? <VenueCard id=\"venueCard\"\n\t\t\t\t\tticketMasterData={this.props.ticketMasterData}\n\t\t\t\t\tgetVenueCard={this.props.getVenueCard}\n\t\t\t\t\tvenuePage={this.props.venuePage}\n\t\t\t\t\trestaurantPage={this.props.restaurantPage}\n\t\t\t\t\tselectedCardId={this.state.selectedCardId}\n\t\t\t\t\tchangeSelectedCard={this.changeSelectedCard}\n\t\t\t\t\tscreenWidth={this.props.screenWidth}\n\t\t\t\t/>\n\t\t\t\t: <RestaurantCard \n\t\t\t\t\trestaurantData={this.props.restaurantData}\n\t\t\t\t\tgetRestaurantCard={this.props.getRestaurantCard}\n\t\t\t\t\tvenuePage={this.props.venuePage}\n\t\t\t\t\trestaurantPage={this.props.restaurantPage}\n\t\t\t\t\tticketMasterData={this.props.ticketMasterData}\n\t\t\t\t\tvenueUserInput={this.props.venueUserInput}\n\t\t\t\t\tscreenWidth={this.props.screenWidth}\n\t\t\t\t\tchangeSelectedRestoCard={this.changeSelectedRestoCard}\n\t\t\t\t\tselectedRestoCardId={this.state.selectedRestoCardId}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Carousel","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Tracker = styled.div`\n\twidth: 40%;\n\theight: 10px;\n\tmargin: 8px auto;\n\tbackground: white;\n\tborder-radius: 10px;\n`;\n\nconst ProgressInTracker = styled.div`\n   width: ${props => props.percentage}%;\n   height: 100%;\n   background: #084c61;\n   border-radius: 8px;\n   transition: width 0.3s ease-in;\n`;\n\nclass ProgressBar extends Component {\n\n   percentageLimits = (min, value, max) => {\n      return Math.min(Math.max(min, value), max);\n   }\n   render() {\n      return (\n         <Tracker>\n            <ProgressInTracker \n               percentage={this.percentageLimits(0, this.props.percentage, 100)}\n            />\n         </Tracker>\n      )\n   }\n} // end of ProgressBar extends Component\n\nexport default ProgressBar","import React, {Component, Fragment} from 'react';\nimport axios from 'axios';\nimport Carousel from './Carousel.js';\nimport {\n\tRoute,\n\tLink\n} from 'react-router-dom'\nimport Modal from './Modal.js';\nimport ProgressBar from './ProgressBar.js';\n\nclass DynamicMainDisplay extends Component {\n\tconstructor(){\n\t\t\tsuper();\n\t\t\tthis.state = {\n\t\t\t\t//Zomato states\n\t\t\t\trestaurantData: [],\n\t\t\t\trestaurantNames: [],\n\t\t\t\trestaurantCuisine: [],\n\t\t\t\trestaurantPriceRange: [],\n\t\t\t\trestaurantRating: [],\n\t\t\t\trestaurantAddress: [],\n\t\t\t\trestaurantUrl: [],\n\t\t\t\t\n\t\t\t\t// Page state - controlling when they appear\n\t\t\t\tvenuePage: true,\n\t\t\t\trestaurantPage: false,\n\t\t\t\tconfirmationPage: false,\n\t\t\t\tsavedCombosPage: false,\n\t\t\t\tmodalPage: false,\n\t\t\t\t\n\t\t\t\t// User Input States - keeping track of user values from input\n\t\t\t\tvenueUserInput: false,\n\t\t\t\trestaurantUserInput: false,\n\t\t\t\tuserInputCombination: false,\n\t\t\t\tticketMasterData: [],\n\n\t\t\t\t// Progress Bar Initial State (Starts at 33.34% to indicate Stage 1 of 3 is complete)\n\t\t\t\tpercentage: 33.34,\n\n\t\t\t\t// recording screen width for responsiveness of carousel\n\t\t\t\tscreenWidth: 0\n\t\t\t}\n\t\t} //end of constructor \n\n\t// used to reset dynamicMainDisplay if user decide to do new search while on restaurant card page\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.resetVenueResto !== prevProps.resetVenueResto) {\n\t\t\tthis.setState({\n\t\t\t\tvenuePage: true,\n\t\t\t\trestaurantPage: false\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst zomatoURL = `https://developers.zomato.com/api/v2.1/search`;\n\t\tconst zomatoKey = `105eeb0d2c69617a061003c1a4f82e13`;\n\n\t\t//zomato api call\n\t\tthis.getRestaurantData = (longitude, latitude) => {\n\t\t\taxios({\n\t\t\t\tmethod: `GET`,\n\t\t\t\turl: zomatoURL,\n\t\t\t\tdataResponse: `json`,\n\t\t\t\tparams: {\n\t\t\t\t\tapikey: zomatoKey,\n\t\t\t\t\tstart: 1,\n\t\t\t\t\tcount: 20,\n\t\t\t\t\tlat: latitude,\n\t\t\t\t\tlon: longitude,\n\t\t\t\t\tradius: 1000,\n\t\t\t\t\tsort: \"real_distance\"\n\t\t\t\t}\n\t\t\t}).then(results => {\n\t\t\t\tthis.setState({\n\t\t\t\t\trestaurantData: results.data.restaurants,\n\t\t\t\t})\n\t\t\t}) // end of .then method\n\t\t} // end of getRestaurantData\n\n\t\t// checking and recording viewport view for dynamic media query using js\n\t\tconst intViewportWidth = window.innerWidth;\n\t\tthis.setState({\n\t\t\tscreenWidth: intViewportWidth\n\t\t})\n\t}// end of componentDidMount\n\n\t// recording user's choice of event and event venue for 2nd api call and for later record display\n\tgetVenueCard = (venueId) => {\n\tthis.setState({\n\t\t\tvenueUserInput: this.props.ticketMasterData[venueId],\n\t\t})\t\t\n\t} // end of getvenueCard \n\t\n\tdisplayRestaurantCards = () => {\n\t\tconst longitude = this.state.venueUserInput._embedded.venues[0].location.longitude;\n\t\tconst latitude = this.state.venueUserInput._embedded.venues[0].location.latitude;\n\n\t\t// calling the zomato API\n\t\tthis.getRestaurantData(longitude, latitude);\n\t\t// changing from venue display to restaurant display\n\t\tthis.setState({\n\t\t\tvenuePage: false,\n\t\t\trestaurantPage: true\n\t\t})\n\t} // end of displayRestaurantCards\n\t\n\tgetRestaurantCard = (restaurantId) => {\n\t\tthis.setState({\n\t\t\trestaurantUserInput: this.state.restaurantData[restaurantId],\n\t\t\tuserInputCombination: [this.state.venueUserInput, this.state.restaurantData[restaurantId]] \n\t\t\t\n\t\t})\n\t}\t // end of getRestaurantCard\n\n\thandleClick = () => {\n\t\t// Adds to ProgressBar with each click\n\t\tif (this.state.venuePage && this.state.venueUserInput) {\n\t\t\tthis.displayRestaurantCards()\n\t\t\tthis.setState({\n\t\t\t\tpercentage: this.state.percentage + 33.33\n\t\t\t})\t\n\t\t}\n\t\telse if (this.state.restaurantPage && this.state.restaurantUserInput){\n\t\t\tthis.setState({\n\t\t\t\tpercentage: this.state.percentage + 33.33,\n\t\t\t\trestaurantPage: false,\n\t\t\t})\n\t\t}\n\t\t// Error handling if no event is selected before trying to proceed\n\t\telse if (this.state.venuePage && this.state.venueUserInput === false) {\n\t\t\talert(\"Please select an event.\");\n\t\t}\n\t\t// Error handling if no restaurant is selected before trying to proceed\n\t\telse if (this.state.restaurantPage && this.state.restaurantUserInput === false) {\n\t\t\talert(\"Please select a restaurant.\");\n\n\t\t}\n\t} // end of handleClick\n\n\trender() {\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"dynamicMainDisplay\">\n\t\t\t\t\t<ProgressBar percentage={this.state.percentage}/>\n\n\t\t\t\t\t<h2>Please make a selection</h2>\n\t\t\t\t\t<Carousel \n\t\t\t\t\t\tvenuePage={this.state.venuePage}\n\t\t\t\t\t\tticketMasterData={this.props.ticketMasterData}\n\t\t\t\t\t\tgetVenueCard={this.getVenueCard}\n\t\t\t\t\t\trestaurantPage={this.state.restaurantPage}\n\t\t\t\t\t\tuserInputCombination={this.state.userInputCombination}\n\t\t\t\t\t\trestaurantData={this.state.restaurantData}\n\t\t\t\t\t\tgetRestaurantCard={this.getRestaurantCard}\n\t\t\t\t\t\tvenueUserInput={this.state.venueUserInput}\n\t\t\t\t\t\tscreenWidth={this.state.screenWidth}\n\t\t\t\t\t/>\n\t\t\t\t\t<Link className=\"dynamicConfirmButtonContainer\" to={{\n\t\t\t\t\t\tpathname: this.state.restaurantUserInput ? '/modal' : undefined, \n\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\tuserInputCombination: [this.state.venueUserInput, this.state.restaurantUserInput],\n\t\t\t\t\t\t\trestaurantPage: false,\n\t\t\t\t\t\t\tvenuePage: false,\n\t\t\t\t\t\t\tdisplayModal: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<button className=\"dynamicConfirmButton\" onClick={this.handleClick}>Confirm Selection</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Route path=\"/modal\" component={Modal}></Route>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n} // end of the class function\n\nexport default DynamicMainDisplay","import React, {Component} from 'react';\nimport firebase from '../firebase.js';\nimport plateSetting from '../assets/plateSetting.jpg';\n\nclass SavedCombos extends Component {\n    createNewCombo = () => {\n\t\t\twindow.location.href = \"/\"\n    }\n    \n    removeCombo = (comboId) => {\n\t\t\tconst dbRefCombo = firebase.database().ref(comboId);\n\n\t\t\tdbRefCombo.remove();\n\t\t\t\t\n\t\t\twindow.location.href = \"/\"\n    }\n\n    render() {\n        return(\n            <div id=\"combo\" className=\"savedCombos\">\n                <h2>Shared Results</h2>\n                <label htmlFor=\"makeYourCombo\" className=\"visuallyHidden\">Create your own combo</label>\n\t\t\t\t\t\t\t\t<button id=\"createNewCombo\" className=\"createNewCombo\" onClick={this.createNewCombo}>Create New Combo</button>\n\n                {\n\t\t\t\t\tthis.props.savedCombos.map((data) => {\n                        const userName = data.combo.name;\n                        const event = data.combo.combo[0];\n                        const eventDate = event.dates.start;\n                        const eventVenue = event._embedded.venues[0];\n                        const resto = data.combo.combo[1].restaurant;\n\n                        return(\n\t\t\t\t\t\t\t<div key={data.key} className=\"savedCombosOuterContainer\">\n\t\t\t\t\t\t\t\t<h3>{userName}'s Combo</h3>\n\t\t\t\t\t\t\t\t<div className=\"savedCombosInnerContainer\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"eventComboContainer comboContainer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={event.images[0].url} alt={event.name}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{event.name}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{eventDate.localDate} {eventDate.localTime}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{eventVenue.name}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={eventVenue.url} aria-label=\"go to ticketmasker page for the specific venue where tickets are sold.\">get your ticket</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"restaurantComboContainer comboContainer\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"imageContainer\">\n\t\t\t\t\t\t\t\t\t\t\t<img src={plateSetting} alt=\"A dinner place setting.\" />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{resto.name}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{resto.cuisines}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"priceNRating\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{resto.price_range}/5</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{resto.user_rating.aggregaterating}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={resto.url}>zomato profile</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button className=\"removeButton\" onClick={() => { this.removeCombo(data.key) }}>remove combo</button>\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default SavedCombos;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport firebase from '../firebase.js';\nimport DynamicMainDisplay from './DynamicMainDisplay';\nimport SavedCombos from './SavedCombos.js';\n\nclass Header extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tuserCountry: \"\",\n\t\t\tuserCity: \"\",\n\n\t\t\t//TicketMaster states\n\t\t\tvenueNames: [],\n\t\t\teventNames: [],\n\t\t\tvenueAddresses: [],\n\t\t\tcityNames: [],\n\t\t\tlongitudes: [],\n\t\t\tlatitudes: [],\n\t\t\tdateString: '',\n\t\t\tticketMasterData: [],\n\n\t\t\tdynamicMainDisplayPage: false,\n\t\t\tsavedCombosPage: false,\n\n\t\t\tvenuePage: true,\n\t\t\trestaurantPage: false,\n\t\t\tresetVenueResto: false,\n\n\t\t\tsavedCombos: []\n\t\t}\n}\n\n\tcomponentDidMount() {\n\t\tconst ticketMasterURL = `https://app.ticketmaster.com/discovery/v2/events.json`;\n\t\tconst ticketMasterKey = `OAKSlXdTBwnYydjVVSFhbh0MrAqawD6u`;\n\n\t\t// Formatting Date for ticketmaster api call\n\t\tconst newDate = new Date();\n\t\tconst year = newDate.getFullYear();\n\t\tconst newMonth = newDate.getMonth() + 1;\n\t\tconst newDay = newDate.getDate();\n\t\tlet month = (newMonth < 10) ? \"0\" + newMonth : newMonth;\n\t\tlet day = (newDay < 10) ? \"0\" + newDay : newDay;\n\t\tlet dateString = (`${year}-${month}-${day}T12:00:00Z`)\n\t\tthis.setState({ dateString })\n\n\t\t//ticket master api call\n\t\tthis.getTicketMasterData = (country, city) => {\n\t\t\taxios({\n\t\t\t\tmethod: `GET`,\n\t\t\t\turl: ticketMasterURL,\n\t\t\t\tdataResponse: `json`,\n\t\t\t\tparams: {\n\t\t\t\t\t\tapikey: ticketMasterKey,\n\t\t\t\t\t\tcountry: country,\n\t\t\t\t\t\tcity: city,\n\t\t\t\t\t\tsort: `date,asc`,\n\t\t\t\t\t\tstartDateTime: this.state.dateString\n\t\t\t\t}\n\t\t\t}).then(results => {\n\t\t\t\tconst resultsReturned = results.data.page.totalPages;\n\t\t\t\tif (resultsReturned > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tticketMasterData: results.data._embedded.events\n\t\t\t\t\t})\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdocument.getElementById('carouselContainer').scrollIntoView()\n\t\t\t\t\t}, 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tticketMasterData: [],\n\t\t\t\t\t\tdynamicMainDisplayPage: false\n\t\t\t\t\t})\n\t\t\t\t\talert(`There aren't any events near you at this time. Please enter another city name.`);\n\t\t\t\t}\n\n\t\t\t})\n\t\t} // end of getTicketMasterData\n\n\t\t// getting firebase data\n\t\tconst dbRef = firebase.database().ref();\n\t\tdbRef.on('value', (response) => {\n\t\t\tconst valueArray = response.val();\n\t\t\tconst newSaved = [];\n\t\t\tif (valueArray !== null) {\n\t\t\t\tfor (let item in valueArray) {\n\t\t\t\t\tnewSaved.push({\n\t\t\t\t\t\tkey: item,\n\t\t\t\t\t\tcombo: valueArray[item],\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsavedCombos: newSaved\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsavedCombos: []\n\t\t\t\t})\n\t\t\t}\n\t\t}); // end of getting firebase data\n\t}  // end of componentDidMount\n\n\thandleOnChange = (e) => {\n\t\tif (e.target.id === \"country\") {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuserCountry: e.target.value\n\t\t\t\t});\n\t\t} else if (e.target.id === \"city\") {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuserCity: e.target.value\n\t\t\t\t});\n\t\t};\n\t};\n\n\t// when form being submitted, press on begin button\n\thandleOnSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif(this.state.userCity) {\n\t\t\tif (!this.state.resetVenueResto) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdynamicMainDisplayPage: true,\n\t\t\t\t\tsavedCombosPage: false,\n\t\t\t\t\tresetVenueResto: true\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdynamicMainDisplayPage: true,\n\t\t\t\t\tsavedCombosPage:false,\n\t\t\t\t\tresetVenueResto: false\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.getTicketMasterData(this.state.userCountry, this.state.userCity);\n\t\t}  // end of if(this.state.userCity) statement\n\t} // end of handleOnSubmit\n\n\t// savedCombo display function\n\tdisplaySavedCombos = () => {\n\t\t// check firebase data is loaded before loading the page\n\t\tif (this.state.savedCombos.length === 0) {\n\t\t\t// if there's nothing to laod, alert the users\n\t\t\talert(`Sorry, there's no saved suggestion at the moment; or you are clicking too quickly. Stop trying to break our app.`)\n\t\t} else {\n\t\t\t// if there's array then try to load, hope this will make the setTimeout behave\n\t\t\tthis.setState({\n\t\t\t\tdynamicMainDisplayPage: false,\n\t\t\t\tsavedCombosPage: true\n\t\t\t})\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById('combo').scrollIntoView()\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\t// rendering a form for user to start their search\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header id=\"header\">\n\t\t\t\t\t<div className=\"headerInnerWrapper\">\n\t\t\t\t\t\t<h1>DINNER AFTER SHOW</h1>\n\t\t\t\t\t\t<p>Input your country and city to see what upcoming events are happening around you.</p>\n\t\t\t\t\t\t<form onSubmit={this.handleOnSubmit}>\n\t\t\t\t\t\t\t<div className=\"input\">\n\t\t\t\t\t\t\t\t<div className=\"selectInput\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"country\"></label>\n\t\t\t\t\t\t\t\t\t\t<select id=\"country\" name=\"country\" onChange={this.handleOnChange}>\n\t\t\t\t\t\t\t\t\t\t\t{/* change #2 */}\n\t\t\t\t\t\t\t\t\t\t\t<optgroup label=\"Country\">\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"CA\">Canada</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"AU\">Australia</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"CA\">Canada</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"IN\">India</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"IE\">Ireland</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"IT\">Italy</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"NZ\">New Zealand</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"PL\">Poland</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"AE\">United Arab Emirates</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"UK\">United Kingdom</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"US\">United States</option>\n\t\t\t\t\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"city\"></label>\n\t\t\t\t\t\t\t\t\t<input id=\"city\" type=\"text\" placeholder=\"e.g. Toronto\" onChange={this.handleOnChange} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"submitButton\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"submitButton\" className=\"visuallyHidden\">Begin your search</label>\n\t\t\t\t\t\t\t\t\t\t<button href=\"#carouselContainer\" id=\"submitButton\" type=\"submit\">Begin</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<label htmlFor=\"communitySuggestion\" className=\"visuallyHidden\">See all posted results</label>\n\t\t\t\t\t\t<button href=\"#combo\" id=\"communitySuggestion\" onClick={this.displaySavedCombos} className=\"communitySuggestion\">Saved Suggestions</button>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\n\t\t\t\t{this.state.dynamicMainDisplayPage\n\t\t\t\t\t? <DynamicMainDisplay \n\t\t\t\t\t\tticketMasterData={this.state.ticketMasterData}\n\t\t\t\t\t\tvenuePage={this.state.venuePage}\n\t\t\t\t\t\trestaurantPage={this.state.restaurantPage}\n\t\t\t\t\t\tresetVenueResto={this.state.resetVenueResto}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{this.state.savedCombosPage\n\t\t\t\t\t? <SavedCombos savedCombos={this.state.savedCombos} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t) // end of return()\n\t} // end of render()\n} // end of main function\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from './component/Header.js';\nimport './App.css';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n        </div>\n      </Router>  \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/plateSetting.fb5ce5c3.jpg\";"],"sourceRoot":""}